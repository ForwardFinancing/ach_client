module AchClient
  class AchWorks

    # This is the ACHworks "credentials" for your company
    class InputCompanyInfo

      attr_reader :company_key,
                  :company,
                  :loc_i_d,
                  :s_s_s

      ##
      # @param s_s_s [String] Arbitrary 3 letter code they give your company
      # @param loc_i_d [String] Another Arbitrary 4 letter code they give you...
      # @param company [String] Your user id string, used as a username
      # @param company_key [String] A key that they give you used as a password
      # Since all these fields are generated by them, and don't change, it
      # really seems like they could use just one.
      def initialize(
        company_key:,
        company:,
        loc_i_d:,
        s_s_s:
      )
        @company = company
        @company_key = company_key
        @loc_i_d = loc_i_d
        @s_s_s = s_s_s
      end

      ##
      # @return [InputCompanyInfo] instance built from configuration values
      def self.build
        self.new(
          company_key: AchClient::AchWorks.company_key,
          company: AchClient::AchWorks.company,
          loc_i_d: AchClient::AchWorks.loc_i_d,
          s_s_s: AchClient::AchWorks.s_s_s
        )
      end

      ##
      # Build a hash to send to ACHWorks under the InpCompanyInfo XML path
      # @return [Hash] hash to send to ACHWorks
      def to_hash
        {
          InpCompanyInfo: self.instance_variables.map do |var|
            {
              var.to_s.split('@').last.camelize.to_sym =>
                self.instance_variable_get(var)
            }
          end.reduce(&:merge)
        }
      end
    end
  end
end

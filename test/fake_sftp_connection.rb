class FakeSFTPConnection
  def self.dir
    self
  end

  def self.glob(*args)
    [
      FakeFile.new('ACHP08111605'),
      FakeFile.new('ACHP08111601'),
      FakeFile.new('ACHP08111602')
    ]
  end

  def self.file
    self
  end

  def self.open(*args, &block)
    if block_given?
      yield FakeFile.new('TestFile')
    elsif args[0].try(:end_with?, 'most_recent')
      FakeFile.new('most_recent', DateTime.yesterday.to_time.to_s)
    elsif args[0].try(:include?, 'status_check')
      FakeFile.new('status_check',
"""111 111111111 1111111111111111111A111111AAAAAAAAAAAAA          AAAAAAA AAAAAA      AAAAAA
5111AAAAAAAAAAAAAAAA                    1111111111CCDPAYMENTS  1111111111111111111111110000001
611111111111111111111111     0000000100T005           AAAAAAA AAAAAAAAA       0111111111111111
820000000100011000130000000001000000000000001111111111                         111111110000001
9000001000001000000010001100013000000000100000000000000
9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
""")
    elsif args[0].try(:include?, 'status_return_check')
      # Thanks to SVB for example return file data
      FakeFile.new('status_return_check',
"""101 111111119 1111111191107151710A094101Silicon Valley Bank    SILICON VALLEY BANK     AAAAA
5200TESTCOM                             1234567890PPDTESTCOM         1107131811111111110000003
62612345678901234567890      0000010640CUSTIDNO       POTATO JAR CUSTo1       1111111112262626
799R01111111112224622      22237044                                            222370440000953
820000000200222370440000000106400000000000002233344443                         111111110000003
5200TESTCOM                             1234567890CORTESTCOM         1107151811111111110000004
62612345678901234567890      0000000000CUSTIDNO       ABC INC                 1111111112262703
798C03111111112224665      05100025051400549   2018413280533                   053109320252987
820000000200051000250000000000000000000000002233344443                         111111110000004
5200TESTCOM                             9876543210PPDTESTCOM         1107151651111111110000003
62612345678901234567890      0000009391CUSTID1        JOHN DOE                1111111111882705
799R03111111111797982      06310068                                            063100683026190
820000000200063100680000000093910000000000002233344443                         111111110000003
5200TESTCOM                             2233344443CCDTESTCOM         1107131961111111110000002
62612345678901234567890      0000010860CUSTID2        ALPHA INC               1111111112575799
799R04111111112489489      05311259                                            113008460003582
820000000200053112590000000108600000000000002233344443                         111111110000002
5200TESTCOM                             2233344443CCDDTESTCOM        1107131961111111110000003
6261234567890123456789       0000274290CUSTID3       XYC INC                  1111111112582349
799R01111111112489885      32507076                                            021000022751800
9000005000003000000100062891936000000010640000000000000
9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
""")
    else
      self
    end
  end

  def self.entries(*args)
    [
      OpenStruct.new({
        name: 'status_check_1',
        attributes: OpenStruct.new({
          mtime: Time.now.to_i
        })
      }),
      OpenStruct.new({
        name: 'status_check_2',
        attributes: OpenStruct.new({
          mtime: (DateTime.yesterday.to_time - 1.hour).to_i
        })
      }),
      OpenStruct.new({
        name: 'status_return_check_3',
        attributes: OpenStruct.new({
          mtime: (DateTime.yesterday.to_time - 1.hour).to_i
        })
      })
    ]
  end

  def self.read
    'test file contents blah blah blah'
  end

  class FakeFile

    attr_reader :name, :contents

    def initialize(name, contents = "")
      @name = name
      @contents = contents
    end

    def puts(*)
    end

    def read
      @contents
    end

    def write(*args)
    end
  end
end
